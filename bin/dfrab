#!/usr/bin/env bash

CURRENT_DFRAB_PROFILE=$(readlink ~/.dfrab/current)


if [[ "$1" == 'init' ]] ; then
  if [[ ! -f ~/.dfrab/config/inited.conf ]] ; then
    echo "Initing..."
    mkdir -p ~/.dfrab
    mkdir -p ~/.dfrab/backups
    mkdir -p ~/.dfrab/config
    mkdir -p ~/.dfrab/backups/start
    ln -s ~/.dfrab/backups/start ~/.dfrab/current
    touch ~/.dfrab/config/inited.conf
    echo "Init complete"
    exit 0
  fi
  if [[ -f ~/.dfrab/config/inited.conf ]] ; then
    echo "dfrab has already been inited."
    exit 1
  fi
fi

if [[ "$1" == 'help' ]] ; then
  echo "init: sets up dfrab"
  echo "link: makes symlink of the dotfile while dfrab manages it. after link, the file or directory that you are linking is an argument."
  echo "switch-profile: switches to a different profile/backup. Put the profile name as an argument"
  echo "create-profile: makes a new profile and switches to it. put the name of the profile as an argument after create-profile"
  echo "create-backup: creates a new profile but doesn't switch to it. "
  echo "remove-backup: deletes a backup/profile. put the name of the backup as an argument after remove-backup"
  echo "unlink: removes link and moves dotfile and makes it like dfrab has never touched it. put the symlink name as an argument after unlink"
  echo "list-backups: lists backup directories"
  echo "list-contents: lists the contents in ~/.dfarb/current"
  echo "what-profile: prints the current profile/backup location"
  echo "profile-copy: coppies any profile you choose. After profile-copy, the first argument is the profile that will be copy and the second argument is the name of the new copy"
  echo "rename-profile: renames profile/backup of your choice. first argument is the profile and the second argument is the new name."
  echo "archive-current: archives current profile. The argument after archive-current is the name of the archive"
  exit 0
fi

if [[ "$1" == 'version' ]] ; then
  echo "dfrab version: 0.1"
  exit 0
fi

if [[ ! -f ~/.dfrab/config/inited.conf ]] ; then
  echo "dfrab has not been inited yet. Type \"dfran init\" to init dfrab. Type \"dfrab help\" for command help with dfrab."
  exit 1
fi

if [[ "$1" == 'link' ]] ; then
  if [[ "$2" == '.' ]] ; then
    echo "Fatal: canot link ."
    exit 1
  fi
  if [[ "$2" == '..' ]] ; then
    echo "Fatal: cannot link .."
    exit 1
  fi
  if [[ "$2" == '.dfrab' ]] ; then
    echo "Fatal: unable to link .dfrab"
    exit 1
  fi
  if [[ -L "$2" ]]; then
    echo "dfrab cannot link symlinks"
    exit 1
  fi
  if [[ ! -e "$2" ]] ; then
    echo "$2 does not exist. Are you sure you are in the same directory where the file/directory you are linking?"
    exit 2
  fi
  if [[ ! -L "$2" ]] ; then
    mv $2 ~/.dfrab/current
    ln -s ~/.dfrab/current/$2 $2
    echo "Linked $2"
    exit 0
  fi
fi

if [[ "$1" == 'switch-profile' ]] ; then
  if [[ "$2" == '.' ]] ; then
    echo "Fatal: cannot switch to ."
    exit 1
  fi
  if [[ "$2" == '..' ]] ; then
    echo "Fatal: cannot switch to .."
    exit 1
  fi
  if [[ -d ~/.dfrab/backups/$2 ]] ; then
    rm -f ~/.dfrab/current
    ln -sf ~/.dfrab/backups/$2 ~/.dfrab/current
    echo "Switched to $2"
    exit 0
  fi
  if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
    echo "$2 does not exist so it cannot be switched to"
    exit 2
  fi
fi

if [[ "$1" == 'create-profile' ]] ; then
  if [[ -d ~/.dfrab/backups/$2 ]] ; then
    echo "$2 already exists, use a different name."
    exit 21
  fi
  if [[ "$2" == '.' ]] ; then
    echo "Fatal: cannot name profile ."
    exit 1
  fi
  if [[ "$2" == '..' ]] ; then
    echo "Fatal: canot name profile .."
    exit 1
  fi
  if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
    cp -r $CURRENT_DFRAB_PROFILE ~/.dfrab/backups/$2
    if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
      echo "Failed to create and switch to a new profile"
      exit 2
    fi
    rm -f ~/.dfrab/current
    ln -sf ~/.dfrab/backups/$2 ~/.dfrab/current
    echo "$2 Profile created"
    exit 0
  fi
fi
    
if [[ "$1" == 'create-backup' ]] ; then
  if [[ -d ~/.dfrab/backups/$2 ]] ; then
    echo "$2 already exists, use a different name."
    exit 21
  fi
  if [[ "$2" == '.' ]] ; then
    echo "Fatal: cannot create backup ."
    exit 1
  fi
  if [[ "$2" == '..' ]] ; then
    echo "Fatal: cannot create backup .."
    exit 1
  fi
  if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
    cp -r $CURRENT_DFRAB_PROFILE ~/.dfrab/backups/$2
    if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
      echo "Failed to create a backup of $2"
      exit 2
    fi
    echo "Backup $2 created"
    exit 0
  fi
fi

if [[ "$1" == 'remove-backup' ]] ; then
  if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
    echo "$2 does not exist"
    exit 2
  fi
  if [[ -d $CURRENT_DFRAB_PROFILE ]] ; then
    echo "Can't delete because it is currently in use"
    exit 1
  fi
  if [[ "$2" == '.' ]] ; then
    echo "Fatal: cannott remove ."
    exit 1
  fi
  if [[ "$2" == '..' ]] ; then
    echo "Fatal: cannot remove .."
    exit 1
  fi
  if [[ -d ~/.dfrab/backups/$2 ]] ; then
    rm -r ~/.dfrab/backups/$2
    echo "Backup $2 removed"
    exit 0
  fi
fi

if [[ "$1" == 'unlink' ]] ; then
  if [[ ! -e ~/.dfrab/current/$2 ]] ; then
    echo "Can't unlink non existing file"
    exit 1
  fi
  if [[ "$2" == '.' ]] ; then
    echo "Fatal: cannot modify ."
    exit 1
  fi
  if [[ "$2" == '..' ]] ; then
    echo "Fatal: cannot modify .."
    exit 1
  fi
  if [[ ! -e "$2" ]] ; then
    echo "$2 does not exist. Are you sure you are in the same directory where the file/directory you are linking?"
    exit 2
  fi
  if [[ -L "$2" ]] ; then
    rm $2
    mv ~/.dfrab/current/$2 $2
    echo "Finished unlinking $2"
    exit 0
  fi
  if [[ ! -L "$2" ]] ; then
    echo "This is not a link"
    exit 1
  fi
fi

if [[ "$1" == 'profile-copy' ]] ; then
  if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
    echo "Cannot copy non existant directory"
    exit 2
  fi
  if [[ -d ~/.dfrab/backups/$3 ]] ; then
    echo "$3 already exists, use a different name."
    exit 21
  fi
  if [[ "$2" == '.' ]] ; then
    echo "Fatal: cannot copy ."
    exit 1
  fi
  if [[ "$2" == '..' ]] ; then
    echo "Fatal: cannot copy .."
    exit 1
  fi
  if [[ "$3" == '.' ]] ; then
    echo "Fatal: cannot name copy ."
    exit 1
  fi
  if [[ "$3" == '..' ]] ; then
    echo "Fatal: cannot name copy .."
    exit 1
  fi
  if [[ ! -d ~/.dfrab/backups/$3 ]] ; then
    cp -r ~/.dfrab/backups/$2 ~/.dfrab/backups/$3
    if [[ ! -d ~/.dfrab/backups/$3 ]] ; then
      echo "Failed to create a copy $3"
      exit 2
    fi
    echo "Copy of $2 called $3 created"
    exit 0
  fi
fi

if [[ "$1" == 'rename-profile' ]] ; then
  if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
    echo "cannot rename $2 because it doesn't exist"
    exit 2
  fi
  if [[ -d ~/.dfrab/backups/$3 ]] ; then
    echo "cannot change name to $3 because there is already a directory named that"
    exit 21
  fi
  if [[ "$2" == $(basename $CURRENT_DFRAB_PROFILE) ]] ; then
    mv ~/.dfrab/backups/$2 ~/.dfrab/backups/$3
    if [[ ! -d ~/.dfrab/backups/$3 ]] ; then
      echo "fatal: failed to rename $2 to $3"
      if [[ -d ~/.dfrab/backups/$2 ]] ; then
        echo "but $2 still exists"
        exit 1
      fi
      exit 1
    fi
    rm -f ~/.dfrab/current
    ln -sf ~/.dfrab/backups/$3 ~/.dfrab/current
    echo "Renamed $2 to $3"
    exit 0
  fi
  if [[ -d ~/.dfrab/backups/$2 ]] ; then
    mv ~/.dfrab/backups/$2 ~/.dfrab/backups/$3
    if [[ ! -d ~/.dfrab/backups/$3 ]] ; then
      echo "fatal: failed to rename $2 to $3"
      if [[ -d ~/.dfrab/backups/$2 ]] ; then
        echo "but $2 still exists"
        exit 1
      fi
      exit 1
    fi
    echo "Renamed $2 to $3"
    exit 0
  fi
fi

if [[ "$1" == 'archive-current' ]] ; then
   tar -czvf $2.tar.gz -C $CURRENT_DFRAB_PROFILE .
   if [[ ! -e $2.tar.gz ]] ; then
    echo "Archiving failed"
    exit 2
   fi
   echo "Finnished archiving"
   exit 0
fi

if [[ "$1" == 'archive' ]] ; then
  if [[ ! -d ~/.dfrab/backups/$2 ]] ; then
    echo "profile $2 does not exist"
    exit 2
  fi
  if [[ -e "$3" ]] ; then
    echo "Can't name archive $3, it already exists"
    exit 17
  fi
  tar -czvf $3.tar.gz -C ~/.dfrab/backups/$2 .
  if [[ ! -f $3.tar.gz ]] ; then
    echo "Archiving failed"
    exit 2
  fi
  echo "Archived $2 and named it $3"
  exit 0
fi
 
  

if [[ "$1" == 'list-backups' ]] ; then
  ls ~/.dfrab/backups
  exit 0
fi

if [[ "$1" == 'list-contents' ]] ; then
  ls -a ~/.dfrab/current
  exit 0
fi

if [[ "$1" == 'what-profile' ]] ; then
  basename $CURRENT_DFRAB_PROFILE
  exit 0
fi
  

echo "No arguments have been provided or the arguments are incorrect. Type \"dfrab help\" for command help"

exit 22
